name: ðŸš€ Release

on:
  workflow_run:
    workflows: ["ðŸ§ª Test"]
    branches:
      - main
      - beta
    types:
      - completed

jobs:
  prepare:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]') && ${{ github.event.workflow_run.conclusion == 'success' }}"
    steps:
      - run: echo "${{ github.event.head_commit.message }}"
  publish:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # pin@v2
      # Nice trick to use nvmrc in actions/setup-node
      # https://github.com/actions/setup-node/issues/32#issuecomment-872375574
      - name: Read .nvmrc
        run: echo NVMRC=`cat .nvmrc` >> $GITHUB_ENV
      - name: Use Node.js
        uses: actions/setup-node@25316bbc1f10ac9d8798711f44914b1cf3c4e954 # pin@v2
        with:
          node-version: ${{ env.NVMRC }}
          cache: "npm"
      - name: Cache node_modules
        id: cache-node_modules
        uses: actions/cache@c64c572235d810460d0d6876e9c705ad5002b353 # pin@v2
        with:
          path: "**/node_modules"
          key: node_modules-${{ runner.os }}-node-${{ matrix.node-version }}-${{
            hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache-node_modules.outputs.cache-hit != 'true'
        run: |
          npm ci --ignore-scripts
      - name: Test
        run: |
          npm test
        env:
          CI: true
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm install @semantic-release/changelog @semantic-release/git --ignore-scripts --no-save
          npx semantic-release
